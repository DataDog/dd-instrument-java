package datadog.instrument.utils;

import java.nio.charset.StandardCharsets;
import java.util.List;

public final class Glue {

  public static void classHeader(List<String> lines, String gluePackage, String glueName) {
    lines.add("package " + gluePackage + ";");
    lines.add("");
    lines.add("// Generated by " + glueName + "Generator - DO NOT EDIT!");
    lines.add("final class " + glueName + " {");
  }

  public static void packBytecode(List<String> lines, byte[] bytecode) {
    if ((bytecode.length & 0x01) == 1) {
      throw new IllegalStateException("Generated bytecode needs padding to make length even");
    }
    StringBuilder buf = new StringBuilder("      \"");
    for (int i = 0; i < bytecode.length; i += 2) {
      if (buf.length() > 120) {
        lines.add(buf + "\"");
        buf.setLength(0);
        buf.append("          + \"");
      }
      // pack 2 bytes into one char (UTF_16BE)
      char c = (char) ((bytecode[i] << 8) | (0x00FF & bytecode[i + 1]));
      if (c <= 0x00FF) {
        buf.append(String.format("\\%03o", (int) c));
      } else {
        buf.append(String.format("\\u%04x", (int) c));
      }
    }
    lines.add(buf + "\";");
  }

  public static byte[] unpackBytecode(String bytecode) {
    return bytecode.getBytes(StandardCharsets.UTF_16BE);
  }
}
