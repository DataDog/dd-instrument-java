stages:
  - build
  - tests

default:
  tags: [ "arch:amd64" ]  # Use runners with the "arch:amd64" tag

variables:
  BUILDER_IMAGE_VERSION_PREFIX: "v25.07-" # use either an empty string (e.g. "") for latest images or a version followed by a hyphen (e.g. "v25.05-")

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
## for later, run CI on merge request (PR) or on commit to main
#   - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.gradle_build: &gradle_build
  stage: build
  image: ghcr.io/datadog/dd-trace-java-docker-build:${BUILDER_IMAGE_VERSION_PREFIX}base

build:
  extends: .gradle_build
  stage: build
  script:
    - export JAVA_HOME=$JAVA_17_HOME
    - ./gradlew assemble # or ./gradlew :jar since assemble tasks have no actions....
  artifacts:
    paths:
      - "build/libs/*.jar"

test:
  extends: .gradle_build
  stage: tests
  script:
    - export JAVA_HOME=$JAVA_17_HOME
    - ./gradlew $TEST_SUITE #for now, we should really do ./gradlew $TEST_SUITE -x test expect when running test....

  parallel:
    matrix:
      - TEST_SUITE: ["testOn8", "testOn11", "test", "testOn21"]
  artifacts:
    paths:
      - ./**/build/test-results/**/**/TEST-*.xml
    when: always
    reports:
      junit:
        - ./**/build/test-results/**/**/TEST-*.xml

check:
  extends: .gradle_build
  stage: tests
  script:
    - export JAVA_HOME=$JAVA_17_HOME
    - ./gradlew check -x testOn8 -x test -x testOn11 -x testOn21
  artifacts:
    paths:
      - ./**/build/reports/*

