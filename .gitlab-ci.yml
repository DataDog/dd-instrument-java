stages:
  - build

default:
  tags: [ "arch:amd64" ]  # Use runners with the "arch:amd64" tag

variables:
  BUILDER_IMAGE_VERSION_PREFIX: "v25.09-" # use either an empty string (e.g. "") for latest images or a version followed by a hyphen (e.g. "v25.05-")

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE =~ /external_pull_request_event|merge_request_event|push/'

build:
  stage: build
  image: ghcr.io/datadog/dd-trace-java-docker-build:${BUILDER_IMAGE_VERSION_PREFIX}base
  before_script:
    - mkdir -p .gradle
    - export GRADLE_USER_HOME=$(pwd)/.gradle
  cache:
    key:
      files:
        - gradle/wrapper/gradle-wrapper.properties
    paths:
      - .gradle/wrapper/
      - .gradle/notifications/
      - .gradle/caches/
      - .gradle/configuration-cache/
  script:
    - export JAVA_HOME=$JAVA_17_HOME
    - ./gradlew build
    - awk -F, '!/GROUP/ {missed+=$4; covered+=$5} END {print "Total Coverage "int(100*covered/(missed+covered))"%"}' */build/reports/jacoco/*/jacocoTestReport.csv
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    name: "dd-instrument-java-$CI_COMMIT_SHORT_SHA"
    paths:
      - build/libs/dd-instrument-java*
      - ./*/build/test-results/*/TEST-*.xml
      - ./*/build/reports/*
    when: always
    reports:
      junit: ./*/build/test-results/*/TEST-*.xml
      coverage_report:
        coverage_format: jacoco
        path: ./*/build/reports/jacoco/*/jacocoTestReport.xml

